#
# Autogenerated by Thrift
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#


module Haplocheirus
  module TimelineSegmentState
    HIT = 0
    MISS = 1
    TIMEOUT = 2
    VALUE_MAP = {0 => "HIT", 1 => "MISS", 2 => "TIMEOUT"}
    VALID_VALUES = Set.new([HIT, MISS, TIMEOUT]).freeze
  end

  class TimelineStoreException < ::Thrift::Exception
    include ::Thrift::Struct, ::Thrift::Struct_Union
    def initialize(message=nil)
      super()
      self.description = message
    end

    def message; description end

    DESCRIPTION = 1

    FIELDS = {
      DESCRIPTION => {:type => ::Thrift::Types::STRING, :name => 'description'}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class TimelineSegment
    include ::Thrift::Struct, ::Thrift::Struct_Union
    ENTRIES = 1
    SIZE = 2
    STATE = 3

    FIELDS = {
      ENTRIES => {:type => ::Thrift::Types::LIST, :name => 'entries', :element => {:type => ::Thrift::Types::STRING, :binary => true}},
      SIZE => {:type => ::Thrift::Types::I32, :name => 'size'},
      STATE => {:type => ::Thrift::Types::I32, :name => 'state', :default =>         0, :optional => true, :enum_class => Haplocheirus::TimelineSegmentState}
    }

    def struct_fields; FIELDS; end

    def validate
      unless @state.nil? || Haplocheirus::TimelineSegmentState::VALID_VALUES.include?(@state)
        raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field state!')
      end
    end

    ::Thrift::Struct.generate_accessors self
  end

  class TimelineGet
    include ::Thrift::Struct, ::Thrift::Struct_Union
    TIMELINE_ID = 1
    OFFSET = 2
    LENGTH = 3
    DEDUPE = 4

    FIELDS = {
      TIMELINE_ID => {:type => ::Thrift::Types::STRING, :name => 'timeline_id'},
      OFFSET => {:type => ::Thrift::Types::I32, :name => 'offset'},
      LENGTH => {:type => ::Thrift::Types::I32, :name => 'length'},
      DEDUPE => {:type => ::Thrift::Types::BOOL, :name => 'dedupe', :default => false, :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

  class TimelineGetRange
    include ::Thrift::Struct, ::Thrift::Struct_Union
    TIMELINE_ID = 1
    FROM_ID = 2
    TO_ID = 3
    DEDUPE = 4

    FIELDS = {
      TIMELINE_ID => {:type => ::Thrift::Types::STRING, :name => 'timeline_id'},
      FROM_ID => {:type => ::Thrift::Types::I64, :name => 'from_id'},
      TO_ID => {:type => ::Thrift::Types::I64, :name => 'to_id'},
      DEDUPE => {:type => ::Thrift::Types::BOOL, :name => 'dedupe', :default => false, :optional => true}
    }

    def struct_fields; FIELDS; end

    def validate
    end

    ::Thrift::Struct.generate_accessors self
  end

end
